version: "3.8"

services:
        plane-web:
                container_name: planefrontend
                image: makeplane/plane-frontend:0.6
                restart: always
                command: /usr/local/bin/start.sh
                environment:
                        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
                        NEXT_PUBLIC_GOOGLE_CLIENTID: 0
                        NEXT_PUBLIC_GITHUB_APP_NAME: 0
                        NEXT_PUBLIC_GITHUB_ID: 0
                        NEXT_PUBLIC_SENTRY_DSN: 0
                        NEXT_PUBLIC_ENABLE_OAUTH: 0
                        NEXT_PUBLIC_ENABLE_SENTRY: 0
                ports:
                        - 3000:3000

        plane-api:
                container_name: planebackend
                image: makeplane/plane-backend:0.6
                restart: always
                command: ./bin/takeoff
                environment:
                        DJANGO_SETTINGS_MODULE: plane.settings.production
                        DATABASE_URL: postgres://plane:xyzzyspoon@plane-db:5432/plane
                        REDIS_URL: redis://plane-redis:6379/
                        EMAIL_HOST: ${EMAIL_HOST}
                        EMAIL_HOST_USER: ${EMAIL_HOST_USER}
                        EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
                        AWS_REGION: ${AWS_REGION}
                        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}version: "3.8"

services:
        plane-web:
                container_name: planefrontend
                image: makeplane/plane-frontend:0.6
                restart: always
                command: /usr/local/bin/start.sh
                environment:
                        NEXT_PUBLIC_API_BASE_URL: ${NEXT_PUBLIC_API_BASE_URL}
                        NEXT_PUBLIC_GOOGLE_CLIENTID: 0
                        NEXT_PUBLIC_GITHUB_APP_NAME: 0
                        NEXT_PUBLIC_GITHUB_ID: 0
                        NEXT_PUBLIC_SENTRY_DSN: 0
                        NEXT_PUBLIC_ENABLE_OAUTH: 0
                        NEXT_PUBLIC_ENABLE_SENTRY: 0
                ports:
                        - 3000:3000

        plane-api:
                container_name: planebackend
                image: makeplane/plane-backend:0.6
                restart: always
                command: ./bin/takeoff
                environment:
                        DJANGO_SETTINGS_MODULE: plane.settings.production
                        DATABASE_URL: postgres://plane:xyzzyspoon@plane-db:5432/plane
                        REDIS_URL: redis://plane-redis:6379/
                        EMAIL_HOST: ${EMAIL_HOST}
                        EMAIL_HOST_USER: ${EMAIL_HOST_USER}
                        EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
                        AWS_REGION: ${AWS_REGION}
                        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
                        WEB_URL: localhost/
                        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
                        DISABLE_COLLECTSTATIC: 1
                        DOCKERIZED: 1
                        OPENAI_API_KEY: ${OPENAI_API_KEY}
                        GPT_ENGINE: ${GPT_ENGINE}
                        SECRET_KEY: ${SECRET_KEY}
                depends_on:
                        - plane-db
                        - plane-redis
                ports:
                        - 8000:8000

        plane-worker:
                container_name: planerqworker
                image: makeplane/plane-worker:0.6
                restart: always
                command: ./bin/worker
                environment:
                        DJANGO_SETTINGS_MODULE: plane.settings.production
                        DATABASE_URL: postgres://plane:xyzzyspoon@plane-db:5432/plane
                        REDIS_URL: redis://plane-redis:6379/
                        EMAIL_HOST: ${EMAIL_HOST}
                        EMAIL_HOST_USER: ${EMAIL_HOST_USER}
                        EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
                        AWS_REGION: ${AWS_REGION}
                        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
                        WEB_URL: localhost/
                        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
                        DISABLE_COLLECTSTATIC: 1
                        DOCKERIZED: 1
                        OPENAI_API_KEY: ${OPENAI_API_KEY}
                        GPT_ENGINE: ${GPT_ENGINE}
                        SECRET_KEY: ${SECRET_KEY}
                depends_on:
                        - plane-api
                        - plane-db
                        - plane-redis

        plane-db:
                container_name: plane-db
                image: postgres:15.2-alpine
                restart: always
                command: postgres -c 'max_connections=1000'
                environment:
                        POSTGRES_USER: plane
                        POSTGRES_DB: plane
                        POSTGRES_PASSWORD: xyzzyspoon
                volumes:
                        - pgdata:/var/lib/postgresql/data

        plane-redis:
                container_name: plane-redis
                image: redis:6.2.7-alpine
                restart: always
                volumes:
                        - redisdata:/data

volumes:
        pgdata:
        redisdata:
                        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
                        WEB_URL: localhost/
                        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
                        DISABLE_COLLECTSTATIC: 1
                        DOCKERIZED: 1
                        OPENAI_API_KEY: ${OPENAI_API_KEY}
                        GPT_ENGINE: ${GPT_ENGINE}
                        SECRET_KEY: ${SECRET_KEY}
                depends_on:
                        - plane-db
                        - plane-redis
                ports:
                        - 8000:8000

        plane-worker:
                container_name: planerqworker
                image: makeplane/plane-worker:0.6
                restart: always
                command: ./bin/worker
                environment:
                        DJANGO_SETTINGS_MODULE: plane.settings.production
                        DATABASE_URL: postgres://plane:xyzzyspoon@plane-db:5432/plane
                        REDIS_URL: redis://plane-redis:6379/
                        EMAIL_HOST: ${EMAIL_HOST}
                        EMAIL_HOST_USER: ${EMAIL_HOST_USER}
                        EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
                        AWS_REGION: ${AWS_REGION}
                        AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                        AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                        AWS_S3_BUCKET_NAME: ${AWS_S3_BUCKET_NAME}
                        WEB_URL: localhost/
                        GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
                        DISABLE_COLLECTSTATIC: 1
                        DOCKERIZED: 1
                        OPENAI_API_KEY: ${OPENAI_API_KEY}
                        GPT_ENGINE: ${GPT_ENGINE}
                        SECRET_KEY: ${SECRET_KEY}
                depends_on:
                        - plane-api
                        - plane-db
                        - plane-redis

        plane-db:
                container_name: plane-db
                image: postgres:15.2-alpine
                restart: always
                command: postgres -c 'max_connections=1000'
                environment:
                        POSTGRES_USER: plane
                        POSTGRES_DB: plane
                        POSTGRES_PASSWORD: xyzzyspoon
                volumes:
                        - pgdata:/var/lib/postgresql/data

        plane-redis:
                container_name: plane-redis
                image: redis:6.2.7-alpine
                restart: always
                volumes:
                        - redisdata:/data

volumes:
        pgdata:
        redisdata:
