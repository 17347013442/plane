version: "3.8"

networks:
  dev_env:
    driver: bridge

     
services:
  plane-redis:
    image: redis:6.2.7-alpine
    restart: unless-stopped
    networks:
      - dev_env
    ports:
      - 6379:6379
    volumes:
      - D:/data/plane/volumes/redisdata:/data
 
  plane-minio:
    image: minio/minio
    restart: unless-stopped
    networks:
      - dev_env
    command: server /export --console-address ":9001"
    volumes:
      - D:/data/plane/volumes/uploads:/export
    ports:
        - 9000:9000
        - 9001:9001
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${AWS_ACCESS_KEY_ID}
      MINIO_ROOT_PASSWORD: ${AWS_SECRET_ACCESS_KEY}
 
  plane-db:
    image: postgres:15.2-alpine
    restart: unless-stopped
    networks:
      - dev_env
    command: postgres -c 'max_connections=1000'
    volumes:
      - D:/data/plane/volumes/pgdata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      PGDATA: /var/lib/postgresql/data

  
  worker:
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
      - D:/data/logs/plane:/data/logs/plane
    command: ./bin/worker
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  beat-worker:
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    restart: unless-stopped
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
      - D:/data/logs/plane:/data/logs/plane
    command: ./bin/beat
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  migrator:
    build:
      context: ./apiserver
      dockerfile: Dockerfile.dev
      args:
        DOCKER_BUILDKIT: 1
    restart: "no"
    networks:
      - dev_env
    volumes:
      - ./apiserver:/code
    command: >
        sh -c "python manage.py wait_for_db --settings=plane.settings.local &&
             python manage.py migrate --settings=plane.settings.local"
    env_file:
      - ./apiserver/.env
    depends_on:
      - plane-db
      - plane-redis

  proxy:
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    networks:
      - dev_env
    ports:
      - ${NGINX_PORT}:80
    env_file:
      - .env
    environment:
      FILE_SIZE_LIMIT: ${FILE_SIZE_LIMIT:-5242880}
      BUCKET_NAME: ${AWS_S3_BUCKET_NAME:-uploads}
