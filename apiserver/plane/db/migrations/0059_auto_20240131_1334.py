# Generated by Django 4.2.7 on 2024-01-31 13:34
import uuid
from django.db import migrations, models
from django.conf import settings
import django.db.models
import plane.db.models.asset


def update_urls(apps, schema_editor):
    # Check if the app is using minio or s3
    if settings.USE_MINIO:
        prefix1 = (
            f"{settings.AWS_S3_URL_PROTOCOL}//{settings.AWS_S3_CUSTOM_DOMAIN}/"
        )
        prefix2 = prefix1
    else:
        prefix1 = f"https://{settings.AWS_STORAGE_BUCKET_NAME}.s3.{settings.AWS_REGION}.amazonaws.com/"
        prefix2 = (
            f"https://{settings.AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/"
        )

    User = apps.get_model("db", "User")
    bulk_users = []

    # Loop through all the users and update the cover image
    for user in User.objects.all():
        # prefix 1
        if user.avatar and (user.avatar.startswith(prefix1)):
            avatar_key = user.avatar
            user.avatar = "/api/users/avatar/" + avatar_key[len(prefix1) :] + "/"
            bulk_users.append(user)

        # prefix 2
        if not settings.USE_MINIO and user.avatar and user.avatar.startswith(prefix2):
            avatar_key = user.avatar
            user.avatar = "/api/users/avatar/" + avatar_key[len(prefix2) :] + "/"
            bulk_users.append(user)

        # prefix 1
        if user.cover_image and (user.cover_image.startswith(prefix1)):
            cover_image_key = user.cover_image
            user.cover_image = (
                "/api/users/cover-image/" + cover_image_key[len(prefix1) :] + "/"
            )
            bulk_users.append(user)

        # prefix 2
        if not settings.USE_MINIO and user.cover_image and user.cover_image.startswith(prefix2):
            cover_image_key = user.cover_image
            user.cover_image = (
                "/api/users/cover-image/" + cover_image_key[len(prefix2) :] + "/"
            )
            bulk_users.append(user)

    User.objects.bulk_update(
        bulk_users, ["avatar", "cover_image"], batch_size=100
    )


class Migration(migrations.Migration):
    dependencies = [
        ("db", "0058_alter_moduleissue_issue_and_more"),
    ]

    operations = [
        migrations.AlterField(
            model_name="fileasset",
            name="asset",
            field=models.FileField(
                storage=plane.settings.storage.S3PrivateBucketStorage(),
                upload_to=plane.db.models.asset.get_upload_path,
                validators=[plane.db.models.asset.file_size],
            ),
        ),
        migrations.RemoveField(
            model_name="issueactivity",
            name="attachments",
        ),
        migrations.RemoveField(
            model_name="issuecomment",
            name="attachments",
        ),
        migrations.AlterField(
            model_name="integration",
            name="avatar_url",
            field=models.CharField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name="project",
            name="cover_image",
            field=models.CharField(blank=True, max_length=800, null=True),
        ),
        migrations.AlterField(
            model_name="user",
            name="cover_image",
            field=models.CharField(blank=True, max_length=800, null=True),
        ),
        migrations.AlterField(
            model_name="workspace",
            name="logo",
            field=models.CharField(blank=True, null=True, verbose_name="Logo"),
        ),
        migrations.RunPython(update_urls),
    ]
