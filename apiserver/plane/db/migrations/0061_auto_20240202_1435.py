# Generated by Django 4.2.7 on 2024-02-02 14:35

from django.db import migrations
from django.conf import settings

# Third party imports
from bs4 import BeautifulSoup


def convert_image_sources(apps, schema_editor):

    if settings.USE_MINIO:
        prefix1 = (
            f"{settings.AWS_S3_URL_PROTOCOL}//{settings.AWS_S3_CUSTOM_DOMAIN}/"
        )
        prefix2 = prefix1
    else:
        prefix1 = f"https://{settings.AWS_STORAGE_BUCKET_NAME}.s3.{settings.AWS_REGION}.amazonaws.com/"
        prefix2 = (
            f"https://{settings.AWS_STORAGE_BUCKET_NAME}.s3.amazonaws.com/"
        )

    Page = apps.get_model("db", "Page")
    FileAsset = apps.get_model("db", "FileAsset")

    bulk_pages = []
    bulk_assets = {}

    for page in Page.objects.all():
        # Parse the html
        soup = BeautifulSoup(page.description_html, "lxml")
        img_tags = soup.find_all("img")
        for img in img_tags:
            src = img.get("src", "")
            if src and (src.startswith(prefix1)):
                img["src"] = (
                    f"/api/workspaces/{page.workspace.slug}/projects/{page.project_id}/issues/{page.id}/attachments/{src[len(prefix1): ]}/"
                )
                bulk_assets[src[len(prefix1): ]] = {"project_id": str(page.project_id)}
                page.description_html = str(soup)
                bulk_pages.append(page)

            # prefix 2
            if not settings.USE_MINIO and src and src.startswith(prefix2):
                img["src"] = (
                    f"/api/workspaces/{page.workspace.slug}/projects/{page.project_id}/issues/{page.id}/attachments/{src[len(prefix2): ]}/"
                )
                page.description_html = str(soup)
                bulk_pages.append(page)

    Page.objects.bulk_update(bulk_pages, ["description_html"], batch_size=1000)


class Migration(migrations.Migration):

    dependencies = [
        ("db", "0060_fileasset_size"),
    ]

    operations = [
        migrations.RunPython(convert_image_sources),
    ]
