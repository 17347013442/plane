version: "3.8"

services:
  nginx:
    container_name: plane_nginx
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - 80:80
    depends_on:
      - app
      - api
  db:
    image: postgres:15.2-alpine
    container_name: plane_db
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: plane
      POSTGRES_DB: plane
      POSTGRES_PASSWORD: xyzzyspoon
      PGDATA: /var/lib/postgresql/data
    command: postgres -c 'max_connections=1000'
    ports:
      - 5432:5432
  redis:
    image: redis:6.2.7-alpine
    container_name: plane_redis
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redisdata:/data
  app:
    container_name: plane_app
    build:
      context: ./app
      dockerfile: Dockerfile.web
    restart: always
    command: npm run start
    environment:
      NEXT_PUBLIC_ENABLE_OAUTH: 0
      NEXT_PUBLIC_ENABLE_SENTRY: 0
    ports:
      - 3000:3000
  api:
    container_name: plane_api
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
    restart: always
    ports:
      - 8000:8000
    env_file:
      - ./apiserver/.env
    depends_on:
      - db
      - redis
    command: ./bin/takeoff
    links:
      - db:db
      - redis:redis
  worker:
    container_name: plane_worker
    build:
      context: ./apiserver
      dockerfile: Dockerfile.api
    depends_on:
      - redis
      - db
      - api
    command: ./bin/worker
    links:
      - redis:redis
      - db:db
    env_file:
      - ./apiserver/.env
volumes:
  pgdata:
  redisdata:
